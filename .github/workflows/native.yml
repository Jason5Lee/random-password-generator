name: Native CI

on: [push]

jobs:
  build-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - uses: DeLaGuardo/setup-graalvm@4.0
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.0.0.2'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'
      - run: java -version
      - run: gu install native-image
      - name: Shadow jar
        run: ./gradlew --no-daemon shadowJar
      - name: Create Native Image
        shell: bash
        run: |
          native-image --initialize-at-build-time --no-fallback -jar ./build/libs/rpg-0.1-all.jar rpg-${{ matrix.os }}
      - name: Publish artifact
        uses: actions/upload-artifact@master
        with:
          name: rpg-${{ matrix.os }}
          path: rpg-${{ matrix.os }}

#  build-windows:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [windows-2016, windows-latest]
#
#    steps:
#      - uses: actions/checkout@v1
#      - uses: DeLaGuardo/setup-graalvm@2.0
#        with:
#          graalvm-version: '19.3.0.2.java11'
#      - run: java -version
#      - name: Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools
#        run: |
#          choco install visualstudio2017-workload-vctools
#      - name: set env variables and run the Gradle build
#        shell: cmd
#        run: |
#          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
#          ./gradlew build
#      - name: Rename the artifact to OS-unique name
#        shell: bash
#        run: |
#          value=`cp build/graal/checksum build/graal/checksum-${{ matrix.os }}`
#      - name: Publish artifact
#        uses: actions/upload-artifact@master
#        with:
#          name: checksum-${{ matrix.os }}.exe
#          path: build/graal